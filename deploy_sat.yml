---
- name: Deploy Red Hat Satellite
  hosts: rhel-satellite
  become: true
  vars:
    satellite_version: "6.16"
    satellite_admin_username: "admin"
    satellite_admin_password: "changeme123"
    satellite_organization: "Default Organization"
    satellite_location: "Default Location"
    satellite_hostname: "{{ ansible_fqdn }}"
    required_memory_gb: 20
    required_cpu_cores: 4

  pre_tasks:
    - name: Check system requirements
      assert:
        that:
          - ansible_memtotal_mb >= (required_memory_gb * 1024)
          - ansible_processor_vcpus >= required_cpu_cores
        msg: "System does not meet minimum requirements of {{ required_memory_gb }}GB RAM and {{ required_cpu_cores }} CPU cores"

    - name: Ensure system is registered to Red Hat
      redhat_subscription:
        state: present
        username: "{{ rhsm_username }}"
        password: "{{ rhsm_password }}"
        auto_attach: true

    - name: Enable required repositories
      rhsm_repository:
        name:
          - rhel-9-for-aarch64-baseos-rpms
          - rhel-9-for-aarch64-appstream-rpms
          - satellite-6.16-for-rhel-9-aarch64-rpms
          - satellite-maintenance-6.16-for-rhel-9-aarch64-rpms
        state: enabled

    - name: Update system packages
      dnf:
        name: "*"
        state: latest
        
    - name: Install satellite packages
      dnf:
        name:
          - satellite
          - chrony
        state: latest

    - name: Configure firewall
      firewalld:
        port: "{{ item }}"
        permanent: yes
        state: enabled
      loop:
        - 80/tcp
        - 443/tcp
        - 5647/tcp
        - 8140/tcp
        - 9090/tcp

    - name: Start and enable chronyd
      service:
        name: chronyd
        state: started
        enabled: yes

  tasks:
    - name: Configure Satellite
      command: >
        satellite-installer --scenario satellite
        --foreman-initial-admin-username {{ satellite_admin_username }}
        --foreman-initial-admin-password {{ satellite_admin_password }}
        --foreman-initial-organization "{{ satellite_organization }}"
        --foreman-initial-location "{{ satellite_location }}"
        --foreman-server-hostname {{ satellite_hostname }}
        --enable-foreman-plugin-ansible
        --enable-foreman-plugin-discovery
        --enable-foreman-proxy-plugin-ansible
      args:
        creates: /etc/foreman-installer/scenarios.d/satellite-answers.yaml

    - name: Wait for Satellite services to be fully operational
      uri:
        url: "https://{{ satellite_hostname }}/api/status"
        validate_certs: no
      register: result
      until: result.status == 200
      retries: 30
      delay: 30

  post_tasks:
    - name: Verify Satellite installation
      uri:
        url: "https://{{ satellite_hostname }}/api/v2/status"
        user: "{{ satellite_admin_username }}"
        password: "{{ satellite_admin_password }}"
        force_basic_auth: yes
        validate_certs: no
      register: satellite_status
      failed_when: satellite_status.status != 200

    - name: Display successful installation message
      debug:
        msg: "Red Hat Satellite {{ satellite_version }} has been successfully installed on {{ satellite_hostname }}"

  handlers:
    - name: restart satellite-maintain
      service:
        name: satellite-maintain
        state: restarted